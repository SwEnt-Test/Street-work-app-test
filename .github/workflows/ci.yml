name: CI - Test Runner

# Run the workflow when commits are pushed on main or when a PR is modified
on:
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      # First step: Checkout the repository on the runner
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Setup Java JDK 17
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Install Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: '34.0.0'

      # Gradle caching
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # Create the necessary AVD directories
      - name: Create AVD directories
        run: |
          mkdir -p ~/.android/avd

      # Cache the Emulator, if the cache does not hit, create the emulator
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-34

      - name: Create AVD directory
        run: |
          mkdir -p ~/.android/avd/

      # Update Android SDK and Emulator
      - name: Update SDK and Emulator
        run: sdkmanager --update

      # Create AVD and generate snapshot for caching
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          emulator-boot-timeout: 1200
          script: echo "Generated AVD snapshot for caching."

      # Verify emulator is running by waiting for boot
      - name: Wait for Emulator to Boot
        run: |
          adb wait-for-device shell getprop sys.boot_completed

      - name: Verify Emulator Running
        run: adb devices

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Check formatting
      - name: KTFmt Check
        run: ./gradlew ktfmtCheck

      # Assemble the project
      - name: Assemble
        run: ./gradlew assemble lint --parallel --build-cache

      # Run Unit tests
      - name: Run tests
        run: ./gradlew check --parallel --build-cache

      # Run connected tests on the emulator
      - name: Run connected tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          emulator-boot-timeout: 1200
          script: ./gradlew connectedCheck --parallel --build-cache

      # Log adb emulator output for debugging
      - name: Log emulator output
        run: adb -s emulator-5554 logcat -d

      # Generate the coverage report
      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      # Upload the various reports to SonarCloud
      - name: Upload report to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache
